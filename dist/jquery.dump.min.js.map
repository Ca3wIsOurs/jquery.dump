{"version":3,"sources":["jquery.dump.js"],"names":["$","__jqdump__dump_OFF","position","left","top","defaultDepth","dump","obj","iDepth","sHistoryPath","test","__jqdump__dump","fn","this","selector","__jqdump__","data","parseInt","length","dumpWindow","window","open","closed","confirm","document","write","DateToHMSMString","Date","__jqdump__next","close","sIndent","sContextPath","objType","htmlEscape","toString","format","toUTCString","replace","bIsArray","Array","sNewContextPath","sNewHistoryPath","obja","prop","rv","i","push","sort","a","b","isNaN","toLowerCase","Number","c","xcp","name","message","join","str","match","arguments","RegExp","d","iHours","getHours","iMinutes","getMinutes","iSeconds","getSeconds","iMSeconds","getMilliseconds","jQuery"],"mappings":"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","file":"jquery.dump.min.js","sourcesContent":["/**\r\n * jQuery dump plugin. Inspect object properties in a popup window.\r\n */\r\n\r\n(function ($) {\r\n  var __jqdump__dump_OFF = false;         // global OFF switch\r\n  var position = { left: 100, top: 120 }; // popup window position\r\n  var defaultDepth = 2;                   // default dump depth\r\n\r\n  /**\r\n   * Dump object content in popup window with prettyprint and subnavigation\r\n   *\r\n   * <example>\r\n   * // dump navigator properties\r\n   * $.dump(window.navigator, 1, \"window.navigator\");\r\n   *\r\n   * // this may be used to disable all following function calls\r\n   * $.dump(\"off\");\r\n   * </example>\r\n   *\r\n   * @param(obj): object to dump, or \"off\" string to disable all dump calls\r\n   * @param(iDepth): number, optional dumping depth, default 2\r\n   * @param(sHistoryPath): string, optional global properties path relative to the initial dump object value, used for display only.\r\n   * @returns: null\r\n   */\r\n  $.dump = function (obj, iDepth, sHistoryPath) {\r\n    if (typeof(obj) == \"string\" && /^off$/i.test(obj)) { __jqdump__dump_OFF = true; }\r\n    return __jqdump__dump(obj, iDepth, sHistoryPath);\r\n  };\r\n\r\n  /**\r\n   * Dump object content in popup window with prettyprint and subnavigation\r\n   *\r\n   * <example>\r\n   * $(\"#element\").dump(1);\r\n   * // same as\r\n   * $.dump($(\"#element\"), 1, \"(#element)\");\r\n   * </example>\r\n   *\r\n   * Call type: window.dump/$.dump( ... )\r\n   * @param(iDepth): number, optional dumping depth, default 2\r\n   * @returns: null\r\n   */\r\n  $.fn.dump = function (iDepth) {\r\n    return __jqdump__dump(this, iDepth, this.selector? \"(\"+ this.selector +\")\" : \"\");\r\n  };\r\n\r\n  /**\r\n   * Dump object content in popup window with prettyprint and subnavigation\r\n   *\r\n   * @param(obj): object to dump\r\n   * @param(iDepth): number, optional dumping depth, default 2\r\n   * @param(sHistoryPath): string, optional global properties path relative to the initial dump object value, used for display only.\r\n   * @returns: null\r\n   */\r\n  function __jqdump__dump (obj, iDepth, sHistoryPath) {\r\n    if (__jqdump__dump_OFF) { return null; }\r\n\r\n    // store current object value to allow continious/recursive dump browsing via window.opener.__jqdump__\r\n    __jqdump__ = {data: obj, dump: __jqdump__dump };\r\n\r\n    // provide defaults as needed\r\n    iDepth = (typeof(iDepth) == \"number\" && iDepth > 0? parseInt(iDepth, 10) : defaultDepth);\r\n    sHistoryPath = (typeof(sHistoryPath) == \"string\" && sHistoryPath.length > 0? sHistoryPath : \"OBJECT\");\r\n\r\n    // adjust new window position\r\n    position = { top: (position.top - 30) % 120, left: (position.left - 10) % 100 };\r\n\r\n    // try to popup blank page\r\n    var dumpWindow = window.open(\"about:blank\", \"_blank\"\r\n      , \"width=600,height=800,menubar=0,left=\"+ position.left +\",top=\"+ position.top\r\n        +\",location=0,toolbar=0,status=0,scrollbars=1,resizable=1\", true);\r\n\r\n    // popup blocked?\r\n    if (!dumpWindow || dumpWindow.closed == true) {\r\n      if (confirm(\"Dump Window couldn't showup cause of popup blocker.\\nContinue using current window?\")) {\r\n        dumpWindow = window;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // fill the page with dump content\r\n    dumpWindow.document.write(\"<html><head><title>\"+ sHistoryPath +\" @ \"+ DateToHMSMString(new Date()) +\"</title>\"\r\n      +\"<meta http-equiv='Content-Type' content='text/html;charset=utf-8'/>\"\r\n      +\"<style type='text/css'>\"\r\n      +\" body{background-color:#fff;color:#000;font-size:12px;margin-top:24px;}\"\r\n      +\" #toolbar{position:fixed;top:0px;right:0px;z-index:9999;}\"\r\n      +\" span.p.a:hover,span.p.a:hover+span {background-color: #B5F5FF;}\"\r\n      +\" a{text-decoration:none;}\"\r\n      +\" a:hover{text-decoration:underline;}\"\r\n      +\" .h{display:none;}\"                     // hidden element\r\n      +\" .a{cursor:pointer;}\"                   // link like element\r\n      +\" .s{color:#740;}\"                       // string\r\n      +\" .k{color:#427;font-weight:bold;font-style:italic;}\"      // key-word\r\n      +\" .c{color:#666;font-style:italic;}\"     // comment\r\n      +\" .u{color:#259;}\"                       // reserved value\r\n      +\" .p{color:#155;font-weight:bold;}\"      // punctuation\r\n      +\" .d{color:#800;font-weight:bold;}\"      // diggit\r\n      +\" .e{color:#900;font-style:italic;background-color:#FAA;}\" // exception\r\n      +\" .t{color:#080;font-weight:bold;}\"      // true boolean value\r\n      +\" .f{color:#800;font-weight:bold;}\"      // false boolean value\r\n      +\" .arg{color:#000;font-weight:normal;}\"  // number of function arguments\r\n      +\"</style></head><body>\"\r\n      +\"<div id='toolbar'>\"\r\n      +\" <input type='button' id='btnClose' value='Close' onclick='window.close();'/>\"\r\n      +\" <input type='button' value='Collapse All' onclick='ToggleCollapse(true);'/>\"\r\n      +\" <input type='button' value='Expand All' onclick='ToggleCollapse(false);'/>\"\r\n      +\"</div>\"\r\n      +\"<code><pre>\"+ sHistoryPath +\" <span class='p'>=</span> \"\r\n      + __jqdump__next(obj, \"  \", iDepth, \"__jqdump__.data\", sHistoryPath)\r\n      +\"<span class='p'>;</span></pre></code>\"\r\n      // provide data and code to the parent window\r\n      +\"<sc\"+\"ript type='text/javascript'><!-\"+\"-\"\r\n      +\"\\n __jqdump__ = (window.opener? window.opener.__jqdump__ : window.__jqdump__);\"\r\n      +\"\\n if (!__jqdump__) { __jqdump__ = {data: null, dump: function (o) { if (JSON) { alert(JSON.stringify(o)); } } }; }\"\r\n      +\"\\n \"\r\n      // focus the close button to allow fast window close by pressing button [space]\r\n      +\"\\n window.onload = function () {\"\r\n      +\"\\n   window.focus();\"\r\n      +\"\\n   document.getElementById('btnClose').focus();\"\r\n      +\"\\n }\"\r\n      +\"\\n \"\r\n      +\"\\n function ToggleCollapse (bCollapse) {\"\r\n      +\"\\n   var span = document.getElementsByTagName('span');\"\r\n      +\"\\n   for (var i = 0; i < span.length; i++) {\"\r\n      +\"\\n     if (span[i].getAttribute('title') != 'collapse/expand' || (i == 1 && bCollapse)) { continue; }\"\r\n      +\"\\n     span[i].nextSibling.className = bCollapse? 'h' : '';\"\r\n      +\"\\n   }\"\r\n      +\"\\n }\"\r\n      +\"\\n-\"+\"-></sc\"+\"ript></body></html>\"\r\n      );\r\n\r\n    // finalize writings\r\n    dumpWindow.document.close();\r\n\r\n    // ensure new window has data and code to continue further dumps\r\n    dumpWindow.__jqdump__ = {\r\n      data: __jqdump__.data\r\n      , dump: __jqdump__.dump\r\n      //*dbg*/, history: sHistoryPath\r\n    };\r\n\r\n    /**\r\n     * @param(obj): object to dump\r\n     * @param(sIndent): string, used for object properties alignment indentation\r\n     * @param(iDepth): number, dumping depth, defaults to 2\r\n     * @param(sContextPath): string, evaluable object properties path relative to the current obj value, used onclick event\r\n     * @param(sHistoryPath): string, global properties path relative to the initial dump obj value, used for display only\r\n    */\r\n    function __jqdump__next (obj, sIndent, iDepth, sContextPath, sHistoryPath) {\r\n      var objType = typeof(obj);\r\n      if (null == obj && objType != \"undefined\") { return \"<span class='u'>null</span>\"; }\r\n\r\n      switch (objType) {\r\n        case \"object\": break;\r\n        case \"undefined\": return \"<span class='u'>undefined</span>\";\r\n        case \"string\": return obj.length? \"\\\"<span class='s'>\"+ htmlEscape(obj) +\"</span>\\\"\" : \"\\\"\\\"\";\r\n        case \"number\": return \"<span class='d'>\"+ obj.toString() +\"</span>\";\r\n        case \"boolean\": return \"<span class='\"+ (obj? \"t\" : \"f\") +\"'>\"+ obj.toString() +\"</span>\";\r\n        // allow dumping of function return value (simple function call without arguments)\r\n        case \"function\": return format(\r\n          \"<a href='javascript:;' class='k'\"\r\n          +\" onclick='__jqdump__.dump((function(){try{return {0}();}catch(xcp){return {EXCEPTION_WRAPPER:xcp.toString()};}})()\"\r\n          +\",\"+ defaultDepth +\",this.title);' title='{1}()'>func\"+\"tion({2})</a>\"\r\n          , sContextPath\r\n          , sHistoryPath\r\n          , (obj.length? \"<span class='arg'>\"+ obj.length +\"</span>\"  : \"\")\r\n          );\r\n        default: return \"<span class='e'>/* Unknown object type: {\"+ objType +\"}*/</span>\";\r\n      }\r\n\r\n      if (obj instanceof Date) { return \"new Date(\\\"\"+ obj.toUTCString() +\"\\\")\"; }\r\n\r\n      if (iDepth == 0) { // stop here and allow deeper dumping by a click\r\n        return format(\"<a href='javascript:;' class='p' title='show more'\"\r\n          +\" onclick='__jqdump__.dump((function(){try{return {0};}catch(xcp){return {EXCEPTION_WRAPPER:xcp.toString()};}})(),\"\r\n          + defaultDepth +\",\\\"{1}\\\");'\"\r\n          +\">{ ... }</a>\"\r\n          , sContextPath\r\n          , sHistoryPath.replace(/\"/g, \"\\\\\\\"\"));\r\n      }\r\n\r\n      var bIsArray = (obj instanceof Array)\r\n        , sNewContextPath, sNewHistoryPath\r\n        , obja = [], prop;\r\n\r\n      var rv = [\r\n        \"<span class='p a' title='collapse/expand'\"\r\n        +\" onclick='this.nextSibling.className=(this.nextSibling.className==\\\"h\\\"?\\\"\\\":\\\"h\\\")'\"\r\n        +\">&#160;\"+ (bIsArray? \"[\" : \"{\") +\"&#160;</span><span>\\n\"\r\n      ];\r\n\r\n      try {\r\n        // making sorted array of object property names\r\n        if (bIsArray) {\r\n          for (var i = 0; i < obj.length; i++) { obja.push(i); }\r\n        } else {\r\n          for (prop in obj) { obja.push(prop); }\r\n          obja.sort(function (a, b) {\r\n            return (isNaN(a)? (a.toLowerCase() >= b.toLowerCase()? 1 : -1) : (Number(a) >= Number(b))? 1 : -1);\r\n          });\r\n        }\r\n\r\n        // quering object with names via sorted array\r\n        for (var c = 0, length = obja.length; c < length; c++) {\r\n          try {\r\n            prop = obja[c];\r\n            // skip self properties\r\n            if (/__jqdump__/.test(prop)) { continue; }\r\n\r\n            if (bIsArray) { // array index:\r\n              sNewContextPath = format(\"{0}[\\\"{1}\\\"]\", sContextPath, prop);\r\n              sNewHistoryPath = format(\"{0}[\\\"{1}\\\"]\", sHistoryPath, prop);\r\n              rv.push(format(\r\n                \"{0}<span class='a c' onclick='alert(this.title);' title='{1}'>/*{2}*/</span> \"\r\n                , sIndent, sNewHistoryPath, prop\r\n                ));\r\n            } else {// object property:\r\n              if (/(\\W)|(^\\d)/.test(prop)) {//- as string\r\n                sNewContextPath = format(\"{0}[\\\"{1}\\\"]\", sContextPath, prop);\r\n                sNewHistoryPath = format(\"{0}[\\\"{1}\\\"]\", sHistoryPath, htmlEscape(prop));\r\n                rv.push(format(\r\n                  \"{0}<span class='s a' onclick='alert(this.title);' title='{1}'>\\\"{2}\\\"</span> <span class='p'>:</span> \"\r\n                  , sIndent, sNewHistoryPath, htmlEscape(prop)\r\n                  ));\r\n              } else {//- as conventional variable name\r\n                sNewContextPath = format(\"{0}.{1}\", sContextPath, prop);\r\n                sNewHistoryPath = format(\"{0}.{1}\", sHistoryPath, htmlEscape(prop));\r\n                rv.push(format(\r\n                  \"{0}<span class='a' onclick='alert(this.title);' title='{1}'>{2}</span> <span class='p'>:</span> \"\r\n                  , sIndent, sNewHistoryPath, htmlEscape(prop)\r\n                  ));\r\n              }\r\n            }\r\n\r\n            rv.push(__jqdump__next(obj[prop], sIndent +\"  \", iDepth - 1, sNewContextPath, sNewHistoryPath));\r\n          } catch (xcp) {\r\n            rv.push(format(\"<span class='e'>/*{0} - {1}*/</span>\", xcp.name, xcp.message));\r\n          }\r\n\r\n          rv.push((c < (obja.length-1)? \"<span class='p'>,</span>\\n\" : \"\\n\"));\r\n        }\r\n      } catch (xcp) {\r\n        rv.push(format(\"<span class='e'>/*{0} - {1}*/</span>\", xcp.name, xcp.message));\r\n      }\r\n\r\n      rv.push(format(\"{0}</span><span class='p'>{1}</span>\", sIndent.replace(\"  \", \"\"), (bIsArray? \"]\" : \"}\")));\r\n\r\n      return rv.join(\"\");\r\n    };\r\n\r\n    /**\r\n     * Escape native string characters before writing it as html text\r\n     */\r\n    function htmlEscape (str) {\r\n      // trying to speedup the process by checking the length\r\n      return str.length? str.replace(/&/g, \"&amp;\").replace(/\\</g, \"&lt;\").replace(/\\>/g, \"&gt;\") : str;\r\n    };\r\n\r\n    /**\r\n     * Replaces each format item \"{n}\" in `this` string with the string equivalent of a corresponding\r\n     * parameters object's value. For example \"{0}\" reffers to the second argument, \"{1}\" to the third.\r\n     *\r\n     * @note: format identifier \"{i}\" may be repeated multiple times in any order as long as it reffers\r\n     * to corresponding position of the argument\r\n     * @param(0): first parameter is a format-string, containing meta information of insertion positions\r\n     * @param(...): any type, other arguments reffered by the format-string will be evaluated to string\r\n     * @return: string, formating result\r\n     */\r\n    function format (/* ... */) {\r\n      var match = null, rv = arguments[0];\r\n\r\n      for (var c = 1, length = arguments.length; c < length; c++) {\r\n        match = new RegExp(\"\\\\{\"+ (c - 1) +\"\\\\}\", \"g\");\r\n        if (match.test(rv)) {\r\n          rv = rv.replace(match, typeof(arguments[c]) == \"undefined\" ? \"(undefined)\" : arguments[c].toString());\r\n        }\r\n      }\r\n\r\n      match = null;\r\n      return rv;\r\n    };\r\n\r\n    /**\r\n     * Time to string in HH:MM:SS.mmm format\r\n     * @param(d): date object\r\n     */\r\n    function DateToHMSMString (d) {\r\n      var iHours = d.getHours(), iMinutes = d.getMinutes(), iSeconds = d.getSeconds(), iMSeconds = d.getMilliseconds();\r\n\r\n      return (iHours < 10? \"0\" : \"\") + iHours +\":\"+ (iMinutes < 10? \"0\" : \"\") + iMinutes\r\n        +\":\"+ (iSeconds < 10? \"0\" : \"\") + iSeconds\r\n        +\".\"+ (iMSeconds < 100? \"0\" : \"\") + (iMSeconds < 10? \"0\" : \"\") + iMSeconds;\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n})(jQuery);\r\n"]}